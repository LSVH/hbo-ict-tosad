CREATE OR REPLACE TRIGGER brg_icmp_x##NAME##_##ID##
	##TIMING## ##ACTION##
OF ##ATTRIBUTE1## ON ##ENTITY1##
	##FOREACH##
DECLARE
	ex_constraint_violation EXCEPTION;
	v_attr ##ENTITY2##.##ATTRIBUTE2##%TYPE;
	CURSOR cur_icmp IS
		SELECT ##ATTRIBUTE2## FROM ##ENTITY2## y JOIN ##ENTITY1## x ON ##JOINS##;
BEGIN
	OPEN cur_icmp;
	FETCH cur_icmp INTO v_attr;
	CLOSE cur_icmp;

	IF :NEW.##ATTRIBUTE1## ##OPERATOR## v_attr THEN
		ROLLBACK;
		RAISE ex_constraint_violation;
	END IF;

EXCEPTION
	WHEN ex_constraint_violation THEN
		RAISE_APPLICATION_ERROR(-20001,
			'Constraint violation: negative result for comparison of "##ATTRIBUTE1##" on "##ENTITY1##".');
END;
/
CREATE OR REPLACE TRIGGER brg_icmp_y##NAME##_##ID##
	##TIMING## ##ACTION##
OF ##ATTRIBUTE2## ON ##ENTITY2##
	##FOREACH##
DECLARE
	ex_constraint_violation EXCEPTION;
	v_attr ##ENTITY1##.##ATTRIBUTE1##%TYPE;
	CURSOR cur_icmp IS
		SELECT ##ATTRIBUTE1## FROM ##ENTITY1## x JOIN ##ENTITY2## y ON ##JOINS##;
BEGIN
	OPEN cur_icmp;
	FETCH cur_icmp INTO v_attr;
	CLOSE cur_icmp;

	IF :NEW.##ATTRIBUTE2## ##OPERATOR## v_attr THEN
		ROLLBACK;
		RAISE ex_constraint_violation;
	END IF;

EXCEPTION
	WHEN ex_constraint_violation THEN
		RAISE_APPLICATION_ERROR(-20001,
			'Constraint violation: negative result for comparison of "##ATTRIBUTE2##" on "##ENTITY2##".');
END;
/