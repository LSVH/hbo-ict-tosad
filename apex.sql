-- TABLES --
CREATE TABLE "DIALECT" (
	"ID"   NUMBER(9, 0) NOT NULL,
	"URI" VARCHAR2(128) NOT NULL,
	"DRIVER" VARCHAR2(128) NOT NULL,
	"PROTOCOL" VARCHAR2(128) NOT NULL,
	"QUERY" VARCHAR2(128) NOT NULL,
	"TITLE" VARCHAR2(32),
	CONSTRAINT "DIALECT_PK" PRIMARY KEY ("ID") USING INDEX,
	CONSTRAINT "DIALECT_DRIVER_UNQ" UNIQUE ("DRIVER") USING INDEX
)
/
CREATE TABLE "DATABASE" (
	"ID" NUMBER(9, 0) NOT NULL,
	"DIALECT_ID" NUMBER(9, 0) NOT NULL,
	"NAME" VARCHAR2(128) NOT NULL,
	"USER" VARCHAR2(32) NOT NULL,
	"PASS" VARCHAR2(64) NOT NULL,
	"HOST" VARCHAR2(256) NOT NULL,
	"PORT" NUMBER(5, 0) NOT NULL,
	CONSTRAINT "DATABASE_PK" PRIMARY KEY ("ID") USING INDEX,
	FOREIGN KEY ("DIALECT_ID") REFERENCES "DIALECT" ("ID") ON DELETE CASCADE
)
/
CREATE TABLE "TABLE" (
	"ID" NUMBER(9, 0) NOT NULL,
	"DATABASE_ID" NUMBER(9, 0) NOT NULL,
	"NAME" VARCHAR2(64) NOT NULL,
	CONSTRAINT "TABLE_PK" PRIMARY KEY ("ID") USING INDEX,
	FOREIGN KEY ("DATABASE_ID") REFERENCES "DATABASE" ("ID") ON DELETE CASCADE
)
/
CREATE TABLE "COLUMN" (
	"ID" NUMBER(9, 0) NOT NULL,
	"TABLE_ID" NUMBER(9, 0) NOT NULL,
	"NAME" VARCHAR2(64) NOT NULL,
	CONSTRAINT "COLUMN_PK" PRIMARY KEY ("ID") USING INDEX,
	FOREIGN KEY ("TABLE_ID") REFERENCES "TABLE" ("ID") ON DELETE CASCADE
)
/
CREATE TABLE "CATEGORY" (
	"ID" NUMBER(9, 0) NOT NULL,
	"DATABASE_ID"   NUMBER(9, 0) NOT NULL,
	"SLUG" VARCHAR2(4) NOT NULL,
	"TITLE" VARCHAR2(32),
	CONSTRAINT "CATEGORY_PK" PRIMARY KEY ("ID") USING INDEX,
	CONSTRAINT "CATEGORY_SLUG_UNQ" UNIQUE ("SLUG") USING INDEX,
	CONSTRAINT "CATEGORY_SLUG_REGEXP" CHECK (REGEXP_LIKE("SLUG", '^[A-Z0-9]+')),
	FOREIGN KEY ("DATABASE_ID") REFERENCES "DATABASE" ("ID") ON DELETE CASCADE
)
/
CREATE TABLE "RULE_TYPE" (
	"ID" NUMBER(9, 0)  NOT NULL,
	"CATEGORY_ID" NUMBER(9, 0)  NOT NULL,
	"SLUG" VARCHAR2(4) NOT NULL,
	"TITLE" VARCHAR2(32),
	CONSTRAINT "RULE_TYPE_PK" PRIMARY KEY ("ID") USING INDEX,
	CONSTRAINT "RULE_TYPE_SLUG_UNQ" UNIQUE ("SLUG") USING INDEX,
	CONSTRAINT "RULE_TYPE_SLUG_REGEXP" CHECK (REGEXP_LIKE("SLUG", '^[A-Z0-9]+')),
	FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY" ("ID") ON DELETE CASCADE
)
/
CREATE TABLE "TEMPLATE" (
	"DIALECT_ID" NUMBER(9, 0) NOT NULL,
	"RULE_TYPE_ID" NUMBER(9, 0) NOT NULL,
	"CODE" VARCHAR2(4096) NOT NULL,
	CONSTRAINT "COLUMN_PK" PRIMARY KEY ("DIALECT_ID", "RULE_TYPE_ID") USING INDEX,
	FOREIGN KEY ("DIALECT_ID") REFERENCES "DIALECT" ("ID") ON DELETE CASCADE,
	FOREIGN KEY ("RULE_TYPE_ID") REFERENCES "RULE_TYPE" ("ID") ON DELETE CASCADE
)
/
CREATE TABLE "OPERATOR" (
	"ID" NUMBER(9, 0) NOT NULL,
	"RULE_TYPE_ID" NUMBER(9, 0) NOT NULL,
	"VALUE" VARCHAR2(16) NOT NULL,
	CONSTRAINT "OPERATOR_PK" PRIMARY KEY ("ID") USING INDEX,
	FOREIGN KEY ("RULE_TYPE_ID") REFERENCES "RULE_TYPE" ("ID") ON DELETE CASCADE
)
/
CREATE TABLE "RULE" (
	"ID" NUMBER(9, 0)  NOT NULL,
	"RULE_TYPE_ID" NUMBER(9, 0)  NOT NULL,
	"OPERATOR_ID" NUMBER(9, 0)  NOT NULL,
	"TABLE_ID" NUMBER(9, 0)  NOT NULL,
	"COLUMN_ID" NUMBER(9, 0)  NOT NULL,
	"SLUG" VARCHAR2(4) NOT NULL,
	"TITLE" VARCHAR2(32),
	CONSTRAINT "RULE_PK" PRIMARY KEY ("ID") USING INDEX,
	CONSTRAINT "RULE_SLUG_UNQ" UNIQUE ("SLUG") USING INDEX,
	CONSTRAINT "RULE_SLUG_REGEXP" CHECK (REGEXP_LIKE("SLUG", '^[A-Z0-9]+')),
	FOREIGN KEY ("RULE_TYPE_ID") REFERENCES "RULE_TYPE" ("ID") ON DELETE CASCADE,
	FOREIGN KEY ("OPERATOR_ID") REFERENCES "OPERATOR" ("ID") ON DELETE CASCADE,
	FOREIGN KEY ("TABLE_ID") REFERENCES "TABLE" ("ID") ON DELETE CASCADE,
	FOREIGN KEY ("COLUMN_ID") REFERENCES "COLUMN" ("ID") ON DELETE CASCADE
)
/
CREATE TABLE "COMPARISON" (
	"ID" NUMBER(9, 0) NOT NULL,
	"RULE_ID" NUMBER(9, 0) NOT NULL,
	"COLUMN_ID" NUMBER(9, 0),
	"VALUE" VARCHAR2(4096) NOT NULL,
	CONSTRAINT "COMPARISON_PK" PRIMARY KEY ("ID") USING INDEX,
	FOREIGN KEY ("RULE_ID") REFERENCES "RULE" ("ID") ON DELETE CASCADE,
	FOREIGN KEY ("COLUMN_ID") REFERENCES "COLUMN" ("ID") ON DELETE CASCADE
)
/


-- VIEWS --

CREATE OR REPLACE VIEW "RULES" AS
	SELECT
		r."SLUG" AS "SLUG",
		rt."SLUG" AS "TYPE",
		tab."NAME" AS "TABLE",
		col."NAME" AS "COLUMN",
		op."VALUE" AS "OPERATOR",
		cat."SLUG" AS "CATEGORY",
		tpl."CODE" AS "TEMPLATE",
		db."NAME" AS "NAME",
		db."USER" AS "USER",
		db."PASS" AS "PASS",
		db."HOST" AS "HOST",
		db."PORT" AS "PORT",
		dia."URI" AS "URI",
		dia."DRIVER" AS "DRIVER",
		dia."PROTOCOL" AS "PROTOCOL"
	FROM "RULE" r
		LEFT OUTER JOIN "TABLE" tab ON tab."ID" = r."TABLE_ID"
		LEFT OUTER JOIN "COLUMN" col ON col."ID" = r."COLUMN_ID"
		LEFT OUTER JOIN "OPERATOR" op ON op."ID" = r."OPERATOR_ID"
		LEFT OUTER JOIN "RULE_TYPE" rt ON rt."ID" = r."RULE_TYPE_ID"
		LEFT OUTER JOIN "CATEGORY" cat ON cat."ID" = rt."CATEGORY_ID"
		LEFT OUTER JOIN "DATABASE" db ON db."ID" = cat."DATABASE_ID"
		LEFT OUTER JOIN "DIALECT" dia ON dia."ID" = db."DIALECT_ID"
		LEFT OUTER JOIN "TEMPLATE" tpl ON rt."ID" = tpl."RULE_TYPE_ID" AND dia."ID" = tpl."DIALECT_ID"
/

CREATE OR REPLACE VIEW "DATABASES" AS
	SELECT
		db."NAME" AS "NAME",
		db."USER" AS "USER",
		db."PASS" AS "PASS",
		db."HOST" AS "HOST",
		db."PORT" AS "PORT",
		dia."URI" AS "URI",
		dia."DRIVER" AS "DRIVER",
		dia."PROTOCOL" AS "PROTOCOL",
		dia."QUERY" AS "QUERY"
	FROM "DATABASE" db
		LEFT OUTER JOIN "DIALECT" dia ON dia."ID" = db."DIALECT_ID"
/


-- SEQUENCES --
CREATE SEQUENCE "DIALECT_SEQ"
	MINVALUE 1
	MAXVALUE 9999999999999999999999999999
	INCREMENT BY 1
	START WITH 1
	CACHE 20
	NOORDER
	NOCYCLE
/
CREATE SEQUENCE "DATABASE_SEQ"
	MINVALUE 1
	MAXVALUE 9999999999999999999999999999
	INCREMENT BY 1
	START WITH 1
	CACHE 20
	NOORDER
	NOCYCLE
/
CREATE SEQUENCE "TABLE_COLUMN"
	MINVALUE 1
	MAXVALUE 9999999999999999999999999999
	INCREMENT BY 1
	START WITH 1
	CACHE 20
	NOORDER
	NOCYCLE
/
CREATE SEQUENCE "COLUMN_SEQ"
	MINVALUE 1
	MAXVALUE 9999999999999999999999999999
	INCREMENT BY 1
	START WITH 1
	CACHE 20
	NOORDER
	NOCYCLE
/
CREATE SEQUENCE "CATEGORY_SEQ"
	MINVALUE 1
	MAXVALUE 9999999999999999999999999999
	INCREMENT BY 1
	START WITH 1
	CACHE 20
	NOORDER
	NOCYCLE
/
CREATE SEQUENCE "RULE_TYPE_SEQ"
	MINVALUE 1
	MAXVALUE 9999999999999999999999999999
	INCREMENT BY 1
	START WITH 1
	CACHE 20
	NOORDER
	NOCYCLE
/
CREATE SEQUENCE "OPERATOR_SEQ"
	MINVALUE 1
	MAXVALUE 9999999999999999999999999999
	INCREMENT BY 1
	START WITH 1
	CACHE 20
	NOORDER
	NOCYCLE
/
CREATE SEQUENCE "RULE_SEQ"
	MINVALUE 1
	MAXVALUE 9999999999999999999999999999
	INCREMENT BY 1
	START WITH 1
	CACHE 20
	NOORDER
	NOCYCLE
/
CREATE SEQUENCE "COMPARISON_SEQ"
	MINVALUE 1
	MAXVALUE 9999999999999999999999999999
	INCREMENT BY 1
	START WITH 1
	CACHE 20
	NOORDER
	NOCYCLE
/


-- TRIGGERS --

CREATE OR REPLACE TRIGGER "AUTO_INCREMENT_DIALECT"
	BEFORE INSERT
	ON "DIALECT"
	FOR EACH ROW
	BEGIN
		IF :NEW."ID" IS NULL
		THEN
			SELECT "DIALECT_SEQ".nextval
			INTO :NEW."ID"
			FROM sys.dual;
		END IF;
	END;
/
CREATE OR REPLACE TRIGGER "AUTO_INCREMENT_DATABASE"
	BEFORE INSERT
	ON "DATABASE"
	FOR EACH ROW
	BEGIN
		IF :NEW."ID" IS NULL
		THEN
			SELECT "DATABASE_SEQ".nextval
			INTO :NEW."ID"
			FROM sys.dual;
		END IF;
	END;
/
CREATE OR REPLACE TRIGGER "AUTO_INCREMENT_TABLE"
	BEFORE INSERT
	ON "TABLE"
	FOR EACH ROW
	BEGIN
		IF :NEW."ID" IS NULL
		THEN
			SELECT "TABLE_SEQ".nextval
			INTO :NEW."ID"
			FROM sys.dual;
		END IF;
	END;
/
CREATE OR REPLACE TRIGGER "AUTO_INCREMENT_COLUMN"
	BEFORE INSERT
	ON "COLUMN"
	FOR EACH ROW
	BEGIN
		IF :NEW."ID" IS NULL
		THEN
			SELECT "COLUMN_SEQ".nextval
			INTO :NEW."ID"
			FROM sys.dual;
		END IF;
	END;
/
CREATE OR REPLACE TRIGGER "AUTO_INCREMENT_CATEGORY"
	BEFORE INSERT
	ON "CATEGORY"
	FOR EACH ROW
	BEGIN
		IF :NEW."ID" IS NULL
		THEN
			SELECT "CATEGORY_SEQ".nextval
			INTO :NEW."ID"
			FROM sys.dual;
		END IF;
	END;
/
CREATE OR REPLACE TRIGGER "AUTO_INCREMENT_RULE_TYPE"
	BEFORE INSERT
	ON "RULE_TYPE"
	FOR EACH ROW
	BEGIN
		IF :NEW."ID" IS NULL
		THEN
			SELECT "RULE_TYPE_SEQ".nextval
			INTO :NEW."ID"
			FROM sys.dual;
		END IF;
	END;
/
CREATE OR REPLACE TRIGGER "AUTO_INCREMENT_OPERATOR"
	BEFORE INSERT
	ON "OPERATOR"
	FOR EACH ROW
	BEGIN
		IF :NEW."ID" IS NULL
		THEN
			SELECT "OPERATOR_SEQ".nextval
			INTO :NEW."ID"
			FROM sys.dual;
		END IF;
	END;
/
CREATE OR REPLACE TRIGGER "AUTO_INCREMENT_RULE"
	BEFORE INSERT
	ON "RULE"
	FOR EACH ROW
	BEGIN
		IF :NEW."ID" IS NULL
		THEN
			SELECT "RULE_SEQ".nextval
			INTO :NEW."ID"
			FROM sys.dual;
		END IF;
	END;
/
CREATE OR REPLACE TRIGGER "AUTO_INCREMENT_COMPARISON"
	BEFORE INSERT
	ON "COMPARISON"
	FOR EACH ROW
	BEGIN
		IF :NEW."ID" IS NULL
		THEN
			SELECT "COMPARISON_SEQ".nextval
			INTO :NEW."ID"
			FROM sys.dual;
		END IF;
	END;
/